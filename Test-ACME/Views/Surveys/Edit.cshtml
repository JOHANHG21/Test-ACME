@model Test_ACME.Models.Survey

@{
    ViewData["Title"] = "Editar Encuesta";
    var fields = Model.Fields?.ToList() ?? new List<Test_ACME.Models.SurveyField>();
}

<h1>Editar Encuesta</h1>

<form asp-action="Edit" method="post">
    <input type="hidden" asp-for="Id" />
    <div class="form-group">
        <label for="Name">Nombre de la Encuesta</label>
        <input type="text" asp-for="Name" class="form-control" required />
    </div>

    <div class="form-group">
        <label for="Description">Descripción</label>
        <textarea asp-for="Description" class="form-control" required></textarea>
    </div>

    <h3>Campos de la Encuesta</h3>
    <table class="table">
        <thead>
            <tr>
                <th>Nombre del Campo</th>
                <th>Título del Campo</th>
                <th>Tipo</th>
                <th>¿Requerido?</th>
                <th></th>
            </tr>
        </thead>
        <tbody id="fieldsTable">
            @for (int i = 0; i < fields.Count; i++)
            {
                <tr>
                    <td>
                        <input type="hidden" name="Fields[@i].Id" value="@fields[i].Id" />
                        <input type="text" name="Fields[@i].Name" value="@fields[i].Name" class="form-control" required />
                    </td>
                    <td>
                        <input type="text" name="Fields[@i].Title" value="@fields[i].Title" class="form-control" required />
                    </td>
                    <td>
                        <select name="Fields[@i].FieldType" class="form-control" required>
                            @foreach (var option in new[] { "Texto", "Número", "Fecha" })
                            {
                                if (fields[i].FieldType == option)
                                {
                                    <option value="@option" selected>@option</option>
                                }
                                else
                                {
                                    <option value="@option">@option</option>
                                }
                            }
                        </select>
                    </td>
                    <td>
                        <input type="checkbox" name="Fields[@i].IsRequired" @(fields[i].IsRequired ? "checked" : "") />
                    </td>
                    <td>
                        <button type="button" class="btn btn-danger" onclick="this.closest('tr').remove()">Eliminar</button>
                    </td>
                </tr>
            }
        </tbody>
    </table>

    <button type="button" class="btn btn-secondary" onclick="addField()">Agregar Campo</button>
    <button type="submit" class="btn btn-primary">Guardar Cambios</button>
</form>

@section Scripts {
    <script>
        let fieldCount = @fields.Count;

        function addField() {
            const table = document.getElementById('fieldsTable');
            const row = document.createElement('tr');

            row.innerHTML = `
                <td><input type="hidden" name="Fields[${fieldCount}].Id" value="0" />
                    <input type="text" name="Fields[${fieldCount}].Name" class="form-control" required /></td>
                <td><input type="text" name="Fields[${fieldCount}].Title" class="form-control" required /></td>
                <td>
                    <select name="Fields[${fieldCount}].FieldType" class="form-control" required>
                        <option value="Texto">Texto</option>
                        <option value="Número">Número</option>
                        <option value="Fecha">Fecha</option>
                    </select>
                </td>
                <td><input type="checkbox" name="Fields[${fieldCount}].IsRequired" /></td>
                <td><button type="button" class="btn btn-danger" onclick="this.closest('tr').remove()">Eliminar</button></td>
            `;

            table.appendChild(row);
            fieldCount++;
        }
    </script>
}
